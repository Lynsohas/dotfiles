set -g default-terminal "xterm-kitty"
# Start a non-login shell
set -g default-command "${SHELL}"

# utf8 everything
set -q -g utf8
set -q -g status-utf8 on

# emacs key bindings in tmux command prompt (prefix + :) are better than
# vi keys, even for vim users
set -g status-keys emacs

# Set the prefix to `ctrl + w` instead of `ctrl + b`
unbind C-b
set-option -g prefix C-w
bind-key C-w send-prefix

set -g base-index 1           # start windows numbering at 1
setw -g pane-base-index 1     # make pane numbering consistent with windows

set -g focus-events on        # Make applications know when focus switches to the pane

# super useful when using "grouped sessions" and multi-monitor setup
setw -g aggressive-resize on


# Automatically set window title
set-window-option -g automatic-rename on
setw -g automatic-rename on   # rename window to reflect current program
set -g renumber-windows on    # renumber windows when a window is closed
set-option -g set-titles on

# Renumber sessions
set-hook -g session-created "run ~/bin/renumber-sessions.sh"
set-hook -g session-closed  "run ~/bin/renumber-sessions.sh"

#set -g default-terminal screen-256color
set -g status-keys vi
set -g history-limit 10000

# Display tmux messages for 4 seconds
set -g display-time 4000

setw -g mode-keys vi
setw -g monitor-activity on

bind-key v split-window -h
bind-key s split-window -v

bind-key -r J resize-pane -D 2
bind-key -r K resize-pane -U 2
bind-key -r H resize-pane -L 2
bind-key -r L resize-pane -R 2

bind-key M-j resize-pane -D
bind-key M-k resize-pane -U
bind-key M-h resize-pane -L
bind-key M-l resize-pane -R

# Vim style pane selection
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

# Use Alt-vim keys without prefix key to switch panes

unbind -n M-h
unbind -n M-j
unbind -n M-k
unbind -n M-l
# bind -n M-h select-pane -L
# bind -n M-j select-pane -D
# bind -n M-k select-pane -U
# bind -n M-l select-pane -R

# Use Alt-arrow keys without prefix key to switch panes
# bind -n M-Left select-pane -L
# bind -n M-Right select-pane -R
# bind -n M-Up select-pane -U
# bind -n M-Down select-pane -D

# Kill pane
bind C-q display-panes
bind q kill-pane

# Shift arrow to switch windows
bind -n S-Left  previous-window
bind -n S-Right next-window

# easier and faster switching between next/prev window
# Can hold ctrl after prefix and press n/p multiple times to cycle
bind C-p previous-window
bind C-n next-window

# create session
bind C-c new-session

# find session
bind C-f command-prompt -p find-session 'switch-client -t %%'


###################################### Selection & Copy ###########################################

# Use incremental search (may become default, see: https://github.com/tmux/tmux/issues/895)
# Similar to set incsearch in vim.
bind -T copy-mode-vi / command-prompt -ip '(search down)' 'send -X search-forward-incremental "%%%"'
bind -T copy-mode-vi ? command-prompt -ip '(search up)' 'send -X search-backward-incremental "%%%"'

# Simpler binding to start a search
bind / copy-mode \; command-prompt -ip '(search up)' 'send -X search-backward-incremental "%%%"'

# Jump to previous prompt
bind b copy-mode \; send -X start-of-line \; send -X search-backward "‚ùØ"

# Use Ctrl+U to enter copy mode
bind C-u copy-mode

bind-key -T copy-mode-vi 'y' send-keys -X copy-pipe-and-cancel 'reattach-to-user-namespace pbcopy'
# Manipulate selection
bind -T copy-mode-vi v    send -X begin-selection
bind -T copy-mode-vi V    send -X select-line
bind -T copy-mode-vi C-v  send -X rectangle-toggle
bind -T copy-mode-vi Home send -X start-of-line
bind -T copy-mode-vi End  send -X end-of-line


###################################### Mouse Settings ###########################################

# set mouse off
# Single click cancels a selection
# bind -T copy-mode-vi MouseDown1Pane select-pane \; send -X clear-selection

# # Preserve mouse selection and scroll position after mouse drag
# unbind -T copy-mode-vi MouseDragEnd1Pane

# # Make mouse scroll clear selection
# bind -T copy-mode-vi WheelUpPane   select-pane \; send -X clear-selection \; send -N3 -X scroll-up
# bind -T copy-mode-vi WheelDownPane select-pane \; send -X clear-selection \; send -N3 -X scroll-down



bind v split-window -h -c "#{pane_current_path}"
bind s split-window -v -c "#{pane_current_path}"

# No delay for escape key press
set -sg escape-time 0

# Reload tmux config
 unbind r
 bind r \
     source-file ~/.tmux.conf \;\
         display 'Reloaded tmux config.'
# edit configuration
bind e new-window -n '~/.tmux.conf' "sh -c '\${EDITOR:-vim} ~/.tmux.conf && tmux source ~/.tmux.conf && tmux display \"~/.tmux.conf sourced\"'"

# Scrolling works as expected
set -ga terminal-overrides ',*256color*:smcup@:rmcup@'

# Add True Color support
set -ga terminal-overrides ',*256color*:Tc'

# Add cursor shapes
set -ga terminal-overrides ',*:Ss=\E[%p1%d q:Se=\E[2 q'



run-shell "powerline-deamon -q"
source /usr/lib/python3.6/site-packages/powerline/bindings/tmux/powerline.conf

################################ Plugins #####################################
# Configure extrakto
set -g @extrakto_fzf_tool "${HOME}/.fzf/bin/fzf" #If it for some reason fails
set -g @extrakto_open_tool "emacs"
set -g @extrakto_split_size	"12"
# set -g @extrakto_grab_area "0"
# Custom plugins
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'laktak/extrakto' # prefix -> Ctrl+tab to start
set -g @plugin 'tmux-plugins/tmux-yank'
# set -g @plugin 'tmux-plugins/tmux-prefix-highlight' #Unnecessary with most bars now it seems
set -g @plugin 'tmux-plugins/tmux-pain-control'
set -g @plugin 'jbnicolai/tmux-fpp' # prefix -> f to start. Slightly similar usecase as extrakto's ctrl+o

if "test ! -d ~/.tmux/plugins/tpm" \
  "run 'git clone https://github.com/tmux-plugins/tpm ~/.tmux/plugins/tpm'"

run '~/.tmux/plugins/tpm/tpm'


# Statusbar
# Use something based on this if you don't want powerline.

## Refresh status line every 5 seconds
#set -g status-interval 5

## Start window and pane indices at 1.
#set -g base-index 1
#set -g pane-base-index 1

## length of tmux status line
#set -g status-left-length 30
#set -g status-right-length 150

## Make active pane border blue
#set -g pane-active-border-fg colour1

##Set the left and right status
#set -g status-left '#[bg=colour7]#[fg=colour0]#{?client_prefix,#[bg=colour2],} ‚ùê #S #[bg=colour8]#[fg=colour7]#{?client_prefix,#[fg=colour2],}ÓÇ∞#{?window_zoomed_flag, üîç ,}#[fg=colour1]  ‚ô• #(~/dotfiles/tmux_scripts/battery.sh)  '
#set -g status-right '#[fg=colour7]ÓÇ≤#[bg=colour7] #[fg=colour1]#(~/dotfiles/tmux_scripts/uptime.sh) #[fg=colour1]#[fg=colour3]ÓÇ≤#[bg=colour3]#[fg=colour0] #(~/dotfiles/tmux_scripts/music.sh) #[bg=colour3]#[fg=colour1]ÓÇ≤#[bg=colour1]#[fg=colour0] %b %d %H:%M '

## Set the background color
#set -g status-bg colour8

##colour0 (black)
##colour1 (red)
##colour2 (green)
##colour3 (yellow)
##colour4 (blue)
##colour7 (white)
##colour5 colour6 colour7 colour8 colour9 colour10 colour11 colour12 colour13 colour14 colour15 colour16 colour17

##D ()
##F ()
##H (hostname)
##I (window index)
##P ()
##S (session index)
##T (pane title)
##W (currnet task like vim if editing a file in vim or zsh if running zsh)

## customize how windows are displayed in the status line
#set -g window-status-current-format "#[fg=colour8]#[bg=colour4]ÓÇ∞#[fg=colour7]#[bg=colour4] #I* ÓÇ±#[fg=colour7] #W #[fg=colour4]#[bg=colour8]ÓÇ∞"
#set -g window-status-format "#[fg=colour244]#[bg=colour8]#I-#[fg=colour240] ÓÇ± #W"
